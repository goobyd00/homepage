* {
    box-sizing:border-box;
    
}

body {
    background-color: burlywood;
}

.center {
    background-color: pink;
    padding: 10px;
    text-align: center;
    max-width: 500px; /* max- or min- is how you get the sizing to be responsive*/
    margin: 0 auto; /* reliable way to horizontaly center an element in html*/

}

.square {
    background-color: lightblue;
    width: 150px;
    height: 150px;
    border: 1px solid;
    margin: 10px;
    padding: 10px;
    text-align: center;
}

.relative {
    background-color: lightcoral;
    position: relative;
    top: 30px;
    left: 30px;
    z-index: 3;
}


.container {
    background-color: cadetblue;
    width: 300px;
    height: 300px;
    position: relative;
    z-index: 1;
}

.absolute {
    background-color: darkseagreen;
    position: absolute;
    top: 0px;
    right: -100px;
    padding:10px;
    border: 1px solid;
    width: 100px;
}

.sticky {
    background-color: coral;
    position: sticky;
    top: 0;
    z-index: 2; /* z-index is how you control layers*/

}



.smiley {
    background-color: lightgreen;
    position: fixed;
    margin: 0;

    width: 200px;
    height: 200px;
    border: 1px solid;
    border-radius: 100%;
    
    top: 50%; /* percentages are good for responsiveness*/
    left: 50%; /* By default, the percentage sets the bottom left corner of the element to be in the specified %location*/

    transform: translate(-50%, -50%); /*how to actually center the fixed element, from the center of the element. It's moving back %50 of it's size on the xy plane*/

    z-index: 9;
}

.eye {
    background-color: darkkhaki;
    border: 1px solid;
    width: 50px;
    height: 50px;
    border-radius: 0 0 100% 100%;
    position: absolute;
}

.left {
    top: 30px;
    left: 30px;
}

.right {
    top: 30px;
    right: 30px;
}

.mouth {
    background-color: firebrick;
    border: 1px solid;
    width: 150px;
    height: 50px;
    border-radius: 0 0 100% 100%;
    position: absolute;
    bottom: 30px;
    right: 25px;


    
}
